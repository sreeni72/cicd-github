# This workflow will build a MuleSoft project and deploy to CloudHub

name: Build and Deploy to Sandbox

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}      
    
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2
           
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8   
        
    - name: Add repo credentials
      uses: s4u/maven-settings-action@v2.4.0
      with:
        servers: |
          [{
           "id": "MuleRepository",
           "username": "${{ secrets.PLATFORM_USERNAME }}",
           "password": "${{ secrets.PLATFORM_PASSWORD }}"
          }]
    
    - name: Build with maven
      run: mvn -B clean package --file pom.xml
    
    - name: Upload to Exchange
      run: mvn deploy 
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
     
    steps:    
    
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Deploy to Sandbox
      run: mvn deploy -DmuleDeploy -DskipTests  --file pom.xml 
    
